description "<%= @app_name %> resque pool server"

start on runlevel [2345]
stop on runlevel [016]

kill signal INT
setuid deploy
env RAILS_ENV=production
expect daemon

script
  cd /srv/www/<%= @app_name %>/current
  exec bundle exec resque-pool -d -E production -p <%= @pidfile %> -e log/resque-pool.log -o log/resque-pool.log
end script

# The pool manager responds to the following signals:
#
# HUP - reload the config file, reload logfiles, restart all workers.
# QUIT - send QUIT to each worker parent and shutdown the manager after all workers are done.
# INT - send QUIT to each worker parent and immediately shutdown manager
# TERM - send TERM to each worker parent and immediately shutdown manager
# WINCH - send QUIT to each worker, but keep manager running (send HUP to reload config and restart workers)
# USR1/USR2/CONT - pass the signal on to all worker parents (see Resque docs).
# Use HUP to help logrotate run smoothly and to change the number of workers per worker type.
#
# Resque workers respond to a few different signals:
#
# QUIT - Wait for child to finish processing then exit
# TERM / INT - Immediately kill child then exit
# USR1 - Immediately kill child but don't exit
# USR2 - Don't start to process any new jobs
# CONT - Start to process new jobs again after a USR2
